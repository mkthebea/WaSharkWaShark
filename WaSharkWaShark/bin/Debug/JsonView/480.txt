{'_index': 'packets-2021-08-15', '_type': 'doc', '_score': None, '_source': {'layers': {'frame': {'frame.interface_id': '0', 'frame.interface_id_tree': {'frame.interface_name': '\\Device\\NPF_{6F1B7833-93B1-41E5-84E7-D303FD54E8FF}', 'frame.interface_description': 'Wi-Fi'}, 'frame.encap_type': '1', 'frame.time': 'Aug 15, 2021 22:06:32.090492000 대한민국 표준시', 'frame.offset_shift': '0.000000000', 'frame.time_epoch': '1629032792.090492000', 'frame.time_delta': '0.000000000', 'frame.time_delta_displayed': '0.003738000', 'frame.time_relative': '69.981649000', 'frame.number': '16243', 'frame.len': '435', 'frame.cap_len': '435', 'frame.marked': '0', 'frame.ignored': '0', 'frame.protocols': 'eth:ethertype:ip:tcp:http:data-text-lines'}, 'eth': {'eth.dst': '2c:8d:b1:e8:1b:92', 'eth.dst_tree': {'eth.dst_resolved': 'IntelCor_e8:1b:92', 'eth.dst.oui': '2919857', 'eth.dst.oui_resolved': 'Intel Corporate', 'eth.addr': '2c:8d:b1:e8:1b:92', 'eth.addr_resolved': 'IntelCor_e8:1b:92', 'eth.addr.oui': '2919857', 'eth.addr.oui_resolved': 'Intel Corporate', 'eth.dst.lg': '0', 'eth.lg': '0', 'eth.dst.ig': '0', 'eth.ig': '0'}, 'eth.src': '70:5d:cc:db:08:a8', 'eth.src_tree': {'eth.src_resolved': 'EFMNetwo_db:08:a8', 'eth.src.oui': '7364044', 'eth.src.oui_resolved': 'EFM Networks', 'eth.addr': '70:5d:cc:db:08:a8', 'eth.addr_resolved': 'EFMNetwo_db:08:a8', 'eth.addr.oui': '7364044', 'eth.addr.oui_resolved': 'EFM Networks', 'eth.src.lg': '0', 'eth.lg': '0', 'eth.src.ig': '0', 'eth.ig': '0'}, 'eth.type': '0x00000800'}, 'ip': {'ip.version': '4', 'ip.hdr_len': '20', 'ip.dsfield': '0x00000000', 'ip.dsfield_tree': {'ip.dsfield.dscp': '0', 'ip.dsfield.ecn': '0'}, 'ip.len': '421', 'ip.id': '0x000072d3', 'ip.flags': '0x00000040', 'ip.flags_tree': {'ip.flags.rb': '0', 'ip.flags.df': '1', 'ip.flags.mf': '0'}, 'ip.frag_offset': '0', 'ip.ttl': '43', 'ip.proto': '6', 'ip.checksum': '0x00003858', 'ip.checksum.status': '2', 'ip.src': '27.101.199.11', 'ip.addr': '192.168.0.15', 'ip.src_host': '27.101.199.11', 'ip.host': '192.168.0.15', 'ip.dst': '192.168.0.15', 'ip.dst_host': '192.168.0.15'}, 'tcp': {'tcp.srcport': '80', 'tcp.dstport': '64826', 'tcp.port': '64826', 'tcp.stream': '204', 'tcp.len': '381', 'tcp.seq': '130314', 'tcp.seq_raw': '3502011231', 'tcp.nxtseq': '130695', 'tcp.ack': '802', 'tcp.ack_raw': '1954291886', 'tcp.hdr_len': '20', 'tcp.flags': '0x00000018', 'tcp.flags_tree': {'tcp.flags.res': '0', 'tcp.flags.ns': '0', 'tcp.flags.cwr': '0', 'tcp.flags.ecn': '0', 'tcp.flags.urg': '0', 'tcp.flags.ack': '1', 'tcp.flags.push': '1', 'tcp.flags.reset': '0', 'tcp.flags.syn': '0', 'tcp.flags.fin': '0', 'tcp.flags.str': '·······AP···'}, 'tcp.window_size_value': '65535', 'tcp.window_size': '65535', 'tcp.window_size_scalefactor': '-2', 'tcp.checksum': '0x00001ecf', 'tcp.checksum.status': '2', 'tcp.urgent_pointer': '0', 'tcp.analysis': {'tcp.analysis.initial_rtt': '0.009521000', 'tcp.analysis.bytes_in_flight': '9320', 'tcp.analysis.push_bytes_sent': '3301'}, 'Timestamps': {'tcp.time_relative': '0.162693000', 'tcp.time_delta': '0.000000000'}, 'tcp.payload': '6c:2c:20:6e:29:3b:20:2f:2f:eb:a7:88:ec:a7:80:eb:a7:89:20:eb:85:b8:eb:93:9c:eb:a5:bc:20:eb:a7:a8:20:ec:b2:98:ec:9d:8c:ec:9c:bc:eb:a1:9c:0d:0a:20:20:20:20:20:20:20:20:74:68:69:73:2e:69:6e:69:74:43:68:69:6c:64:28:6c:29:3b:0d:0a:20:20:20:20:20:20:20:20:74:68:69:73:2e:69:6e:69:74:43:68:69:6c:64:28:6e:29:3b:0d:0a:20:20:20:20:20:20:20:20:74:68:69:73:2e:6e:65:78:74:50:61:75:73:65:28:29:3b:0d:0a:20:20:20:20:7d:0d:0a:20:20:20:20:2f:2f:2d:2d:2d:20:ec:99:bc:ec:aa:bd:ec:9c:bc:eb:a1:9c:20:eb:84:98:ea:b9:80:2c:20:75:70:ea:b3:bc:20:eb:8f:99:ec:9e:91:ec:9d:b4:20:ea:b0:99:eb:8b:a4:2e:0d:0a:20:20:20:20:2c:0d:0a:20:20:20:20:27:6c:65:66:74:27:3a:20:66:75:6e:63:74:69:6f:6e:20:28:29:20:7b:0d:0a:20:20:20:20:20:20:20:20:74:68:69:73:2e:75:70:28:29:3b:0d:0a:20:20:20:20:7d:0d:0a:20:20:20:20:2f:2f:2d:2d:2d:20:ec:98:a4:eb:a5:b8:ec:aa:bd:ec:9c:bc:eb:a1:9c:20:eb:84:98:ea:b9:80:20:2c:20:64:6f:77:6e:ea:b3:bc:20:eb:8f:99:ec:9e:91:ec:9d:b4:20:ea:b0:99:eb:8b:a4:2e:0d:0a:20:20:20:20:2c:0d:0a:20:20:20:20:27:72:69:67:68:74:27:3a:20:66:75:6e:63:74:69:6f:6e:20:28:29:20:7b:0d:0a:20:20:20:20:20:20:20:20:74:68:69:73:2e:64:6f:77:6e:28:29:3b:0d:0a:20:20:20:20:7d:0d:0a:7d', 'tcp.segment_data': '6c:2c:20:6e:29:3b:20:2f:2f:eb:a7:88:ec:a7:80:eb:a7:89:20:eb:85:b8:eb:93:9c:eb:a5:bc:20:eb:a7:a8:20:ec:b2:98:ec:9d:8c:ec:9c:bc:eb:a1:9c:0d:0a:20:20:20:20:20:20:20:20:74:68:69:73:2e:69:6e:69:74:43:68:69:6c:64:28:6c:29:3b:0d:0a:20:20:20:20:20:20:20:20:74:68:69:73:2e:69:6e:69:74:43:68:69:6c:64:28:6e:29:3b:0d:0a:20:20:20:20:20:20:20:20:74:68:69:73:2e:6e:65:78:74:50:61:75:73:65:28:29:3b:0d:0a:20:20:20:20:7d:0d:0a:20:20:20:20:2f:2f:2d:2d:2d:20:ec:99:bc:ec:aa:bd:ec:9c:bc:eb:a1:9c:20:eb:84:98:ea:b9:80:2c:20:75:70:ea:b3:bc:20:eb:8f:99:ec:9e:91:ec:9d:b4:20:ea:b0:99:eb:8b:a4:2e:0d:0a:20:20:20:20:2c:0d:0a:20:20:20:20:27:6c:65:66:74:27:3a:20:66:75:6e:63:74:69:6f:6e:20:28:29:20:7b:0d:0a:20:20:20:20:20:20:20:20:74:68:69:73:2e:75:70:28:29:3b:0d:0a:20:20:20:20:7d:0d:0a:20:20:20:20:2f:2f:2d:2d:2d:20:ec:98:a4:eb:a5:b8:ec:aa:bd:ec:9c:bc:eb:a1:9c:20:eb:84:98:ea:b9:80:20:2c:20:64:6f:77:6e:ea:b3:bc:20:eb:8f:99:ec:9e:91:ec:9d:b4:20:ea:b0:99:eb:8b:a4:2e:0d:0a:20:20:20:20:2c:0d:0a:20:20:20:20:27:72:69:67:68:74:27:3a:20:66:75:6e:63:74:69:6f:6e:20:28:29:20:7b:0d:0a:20:20:20:20:20:20:20:20:74:68:69:73:2e:64:6f:77:6e:28:29:3b:0d:0a:20:20:20:20:7d:0d:0a:7d'}, 'tcp.segments': {'tcp.segment': '16243', 'tcp.segment.count': '8', 'tcp.reassembled.length': '9320', 'tcp.reassembled.data': '48:54:54:50:2f:31:2e:31:20:32:30:30:20:4f:4b:0d:0a:44:61:74:65:3a:20:53:75:6e:2c:20:31:35:20:41:75:67:20:32:30:32:31:20:31:33:3a:30:36:3a:33:32:20:47:4d:54:0d:0a:43:6f:6e:74:65:6e:74:2d:54:79:70:65:3a:20:74:65:78:74:2f:6a:61:76:61:73:63:72:69:70:74:0d:0a:43:6f:6e:6e:65:63:74:69:6f:6e:3a:20:4b:65:65:70:2d:41:6c:69:76:65:0d:0a:4c:61:73:74:2d:4d:6f:64:69:66:69:65:64:3a:20:4d:6f:6e:2c:20:30:35:20:41:70:72:20:32:30:32:31:20:30:38:3a:35:39:3a:35:31:20:47:4d:54:0d:0a:43:6f:6e:74:65:6e:74:2d:4c:65:6e:67:74:68:3a:20:39:31:34:31:0d:0a:0d:0a:76:61:72:20:6a:73:52:6f:6c:6c:69:6e:67:20:3d:20:66:75:6e:63:74:69:6f:6e:20:28:74:61:72:67:65:74:29:20:7b:0d:0a:20:20:20:20:20:20:20:20:74:68:69:73:2e:74:69:6d:65:72:20:3d:20:6e:75:6c:6c:3b:20:2f:2f:69:6e:74:65:72:76:61:6c:20:ed:83:80:ec:9d:b4:eb:a8:b8:0d:0a:20:20:20:20:20:20:20:20:74:68:69:73:2e:74:69:6d:65:72:4e:65:78:74:50:61:75:73:65:20:3d:20:6e:75:6c:6c:3b:0d:0a:20:20:20:20:20:20:20:20:74:68:69:73:2e:64:69:72:65:63:74:69:6f:6e:20:3d:20:32:3b:20:2f:2f:eb:b0:a9:ed:96:a5:0d:0a:20:20:20:20:20:20:20:20:74:68:69:73:2e:67:61:70:54:69:6d:65:20:3d:20:33:30:3b:20:2f:2f:ec:9d:b4:eb:8f:99:eb:94:9c:eb:a0:88:ec:9d:b4:0d:0a:20:20:20:20:20:20:20:20:74:68:69:73:2e:67:61:70:4d:6f:76:65:20:3d:20:31:3b:20:2f:2f:ec:9d:b4:eb:8f:99:ea:b0:84:ea:b2:a9:0d:0a:20:20:20:20:20:20:20:20:74:68:69:73:2e:67:61:70:4e:65:78:74:50:61:75:73:65:20:3d:20:35:3b:20:2f:2f:eb:8b:a4:ec:9d:8c:20:eb:8c:80:ec:83:81:20:eb:8f:99:ec:9e:91:ec:97:90:20:eb:8c:80:ed:95:9c:20:eb:94:9c:eb:a0:88:ec:9d:b4:2c:20:30:ec:9d:b4:eb:a9:b4:20:ec:82:ac:ec:9a:a9:ec:95:88:ed:95:a8:2e:0d:0a:20:20:20:20:20:20:20:20:74:68:69:73:2e:74:61:72:67:65:74:20:3d:20:6e:75:6c:6c:3b:0d:0a:20:20:20:20:20:20:20:20:74:68:69:73:2e:74:61:72:67:65:74:57:20:3d:20:30:3b:0d:0a:20:20:20:20:20:20:20:20:74:68:69:73:2e:63:68:69:6c:4e:6f:64:65:73:57:20:3d:20:30:3b:0d:0a:20:20:20:20:20:20:20:20:74:68:69:73:2e:73:74:61:72:74:65:64:20:3d:20:66:61:6c:73:65:3b:20:2f:2f:ed:98:84:ec:9e:ac:20:eb:8f:99:ec:9e:91:ec:a4:91:ec:9d:b8:ea:b0:80:3f:0d:0a:20:20:20:20:20:20:20:20:74:68:69:73:2e:70:61:75:73:65:64:20:3d:20:66:61:6c:73:65:3b:20:2f:2f:ed:98:84:ec:9e:ac:20:ec:9e:a0:ec:8b:9c:20:eb:a9:88:ec:b6:a4:20:ec:a4:91:ec:9d:b8:ea:b0:80:3f:0d:0a:20:20:20:20:20:20:20:20:74:68:69:73:2e:6e:65:78:74:50:61:75:73:65:64:20:3d:20:66:61:6c:73:65:3b:20:2f:2f:eb:8b:a4:ec:9d:8c:20:ea:b0:9c:ec:b2:b4:ea:b0:80:20:eb:b3:b4:ec:9d:bc:eb:95:8c:20:ec:9e:a0:ec:8b:9c:20:eb:a9:88:ec:b6:a4:20:ec:a4:91:ec:9d:b8:ea:b0:80:3f:0d:0a:20:20:20:20:20:20:20:20:74:68:69:73:2e:63:68:65:63:6b:53:74:61:72:74:20:3d:20:74:72:75:65:3b:20:2f:2f:73:74:61:72:74:20:ed:95:a0:eb:95:8c:20:ec:9e:90:ec:8b:9d:eb:85:b8:eb:93:9c:eb:93:a4:ec:9d:98:20:eb:84:88:eb:b9:84:eb:a5:bc:20:ec:b2:b4:ed:81:ac:ed:95:b4:ec:84:9c:20:73:74:61:72:74:ea:b0:80:eb:8a:a5:ed:95:9c:ec:a7:80:20:ec:b2:b4:ed:81:ac:2c:20:ec:97:86:ec:9c:bc:eb:a9:b4:20:eb:ac:b4:ec:a1:b0:ea:b1:b4:20:eb:8f:99:ec:9e:91:21:0d:0a:20:20:20:20:20:20:20:20:69:66:20:28:74:61:72:67:65:74:29:20:7b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:74:68:69:73:2e:69:6e:69:74:28:74:61:72:67:65:74:29:3b:0d:0a:20:20:20:20:20:20:20:20:7d:0d:0a:20:20:20:20:7d:0d:0a:6a:73:52:6f:6c:6c:69:6e:67:2e:70:72:6f:74:6f:74:79:70:65:20:3d:20:7b:0d:0a:20:20:20:20:2f:2f:ec:b4:88:ea:b8:b0:ed:99:94:2c:20:ed:83:80:ea:b2:9f:ec:9d:84:20:ec:a7:80:ec:a0:95:ed:95:98:ea:b3:a0:20:ed:83:80:ea:b2:9f:ec:9d:98:20:63:68:69:6c:64:eb:a5:bc:20:ec:b4:88:ea:b8:b0:ed:99:94:ec:8b:9c:ed:82:a8:eb:8b:a4:2e:0d:0a:20:20:20:20:27:69:6e:69:74:27:3a:20:66:75:6e:63:74:69:6f:6e:20:28:74:61:72:67:65:74:29:20:7b:0d:0a:20:20:20:20:20:20:20:20:74:68:69:73:2e:74:61:72:67:65:74:20:3d:20:74:61:72:67:65:74:3b:0d:0a:20:20:20:20:7d:0d:0a:20:20:20:20:2f:2f:2d:2d:2d:20:ed:83:80:ea:b2:9f:20:ec:84:a4:ec:a0:95:20:ec:b4:88:ea:b8:b0:ed:99:94:0d:0a:20:20:20:20:2c:0d:0a:20:20:20:20:27:69:6e:69:74:43:68:69:6c:64:27:3a:20:66:75:6e:63:74:69:6f:6e:20:28:63:68:69:6c:64:29:20:7b:0d:0a:20:20:20:20:20:20:20:20:63:68:69:6c:64:2e:73:74:79:6c:65:2e:6d:61:72:67:69:6e:20:3d:20:27:30:27:3b:0d:0a:20:20:20:20:7d:0d:0a:20:20:20:20:2f:2f:2d:2d:2d:20:eb:b0:a9:ed:96:a5:ea:b3:bc:20:ec:9e:90:ec:8b:9d:20:ec:84:a4:ec:a0:95:20:ec:b4:88:ea:b8:b0:ed:99:94:0d:0a:20:20:20:20:2c:0d:0a:20:20:20:20:27:73:65:74:44:69:72:65:63:74:69:6f:6e:27:3a:20:66:75:6e:63:74:69:6f:6e:20:28:64:69:72:65:63:74:69:6f:6e:29:20:7b:0d:0a:20:20:20:20:09:0d:0a:20:20:20:20:20:20:20:20:74:68:69:73:2e:63:68:61:6e:67:65:44:69:72:65:63:74:69:6f:6e:28:64:69:72:65:63:74:69:6f:6e:29:3b:0d:0a:20:20:20:20:20:20:20:20:76:61:72:20:74:4e:6f:64:65:20:3d:20:5b:5d:3b:0d:0a:20:20:20:20:20:20:20:20:2f:2f:2d:2d:2d:20:ed:83:80:ea:b2:9f:20:ec:b4:88:ea:b8:b0:ed:99:94:0d:0a:20:20:20:20:20:20:20:20:74:68:69:73:2e:74:61:72:67:65:74:2e:73:74:79:6c:65:2e:6f:76:65:72:66:6c:6f:77:20:3d:20:27:68:69:64:64:65:6e:27:3b:0d:0a:20:20:20:20:20:20:20:20:74:68:69:73:2e:74:61:72:67:65:74:2e:73:74:79:6c:65:2e:70:6f:73:69:74:69:6f:6e:20:3d:20:27:72:65:6c:61:74:69:76:65:27:3b:0d:0a:20:20:20:20:20:20:20:20:74:68:69:73:2e:74:61:72:67:65:74:2e:6f:6e:6d:6f:75:73:65:6f:76:65:72:20:3d:20:66:75:6e:63:74:69:6f:6e:20:28:74:68:69:73:43:29:20:7b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:72:65:74:75:72:6e:20:66:75:6e:63:74:69:6f:6e:20:28:29:20:7b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:74:68:69:73:43:2e:6f:6e:6d:6f:75:73:65:6f:76:65:72:28:29:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:7d:0d:0a:20:20:20:20:20:20:20:20:7d:28:74:68:69:73:29:3b:0d:0a:20:20:20:20:20:20:20:20:74:68:69:73:2e:74:61:72:67:65:74:2e:6f:6e:6d:6f:75:73:65:6f:75:74:20:3d:20:66:75:6e:63:74:69:6f:6e:20:28:74:68:69:73:43:29:20:7b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:72:65:74:75:72:6e:20:66:75:6e:63:74:69:6f:6e:20:28:29:20:7b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:74:68:69:73:43:2e:6f:6e:6d:6f:75:73:65:6f:75:74:28:29:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:7d:0d:0a:20:20:20:20:20:20:20:20:7d:28:74:68:69:73:29:3b:0d:0a:09:09:0d:0a:20:20:20:20:20:20:20:20:69:66:20:28:74:68:69:73:2e:64:69:72:65:63:74:69:6f:6e:20:3d:3d:20:31:20:7c:7c:20:74:68:69:73:2e:64:69:72:65:63:74:69:6f:6e:20:3d:3d:20:33:29:20:7b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:74:68:69:73:2e:74:61:72:67:65:74:2e:73:74:79:6c:65:2e:77:68:69:74:65:53:70:61:63:65:20:3d:20:27:6e:6f:72:6d:61:6c:27:3b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:74:68:69:73:2e:74:61:72:67:65:74:57:20:3d:20:74:68:69:73:2e:74:61:72:67:65:74:2e:6f:66:66:73:65:74:57:69:64:74:68:3b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:66:6f:72:20:28:76:61:72:20:63:68:69:6c:64:20:3d:20:74:68:69:73:2e:74:61:72:67:65:74:2e:66:69:72:73:74:43:68:69:6c:64:3b:20:63:68:69:6c:64:3b:20:63:68:69:6c:64:20:3d:20:63:68:69:6c:64:2e:6e:65:78:74:53:69:62:6c:69:6e:67:29:20:7b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:69:66:20:28:63:68:69:6c:64:2e:6e:6f:64:65:54:79:70:65:20:3d:3d:20:31:29:20:7b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:63:68:69:6c:64:2e:73:74:79:6c:65:2e:6d:61:72:67:69:6e:20:3d:20:22:30:22:3b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:63:68:69:6c:64:2e:73:74:79:6c:65:2e:64:69:73:70:6c:61:79:20:3d:20:27:62:6c:6f:63:6b:27:3b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:74:68:69:73:2e:63:68:69:6c:4e:6f:64:65:73:57:20:2b:3d:20:63:68:69:6c:64:2e:6f:66:66:73:65:74:57:69:64:74:68:3b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:7d:20:65:6c:73:65:20:7b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:74:4e:6f:64:65:2e:70:75:73:68:28:63:68:69:6c:64:29:3b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:7d:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:7d:0d:0a:20:20:20:20:20:20:20:20:7d:20:65:6c:73:65:20:69:66:20:28:74:68:69:73:2e:64:69:72:65:63:74:69:6f:6e:20:3d:3d:20:32:20:7c:7c:20:74:68:69:73:2e:64:69:72:65:63:74:69:6f:6e:20:3d:3d:20:34:29:20:7b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:74:68:69:73:2e:74:61:72:67:65:74:2e:73:74:79:6c:65:2e:77:68:69:74:65:53:70:61:63:65:20:3d:20:27:6e:6f:77:72:61:70:27:3b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:74:68:69:73:2e:74:61:72:67:65:74:57:20:3d:20:74:68:69:73:2e:74:61:72:67:65:74:2e:6f:66:66:73:65:74:48:65:69:67:68:74:3b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:66:6f:72:20:28:76:61:72:20:63:68:69:6c:64:20:3d:20:74:68:69:73:2e:74:61:72:67:65:74:2e:66:69:72:73:74:43:68:69:6c:64:3b:20:63:68:69:6c:64:3b:20:63:68:69:6c:64:20:3d:20:63:68:69:6c:64:2e:6e:65:78:74:53:69:62:6c:69:6e:67:29:20:7b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:69:66:20:28:63:68:69:6c:64:2e:6e:6f:64:65:54:79:70:65:20:3d:3d:20:31:29:20:7b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:63:68:69:6c:64:2e:73:74:79:6c:65:2e:6d:61:72:67:69:6e:20:3d:20:22:30:22:3b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:2f:2f:20:63:68:69:6c:64:2e:73:74:79:6c:65:2e:66:6c:6f:61:74:20:3d:20:27:69:6e:6c:69:6e:65:2d:62:6c:6f:63:6b:27:3b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:2f:2f:20:63:68:69:6c:64:2e:73:74:79:6c:65:2e:63:73:73:54:65:78:74:20:2b:3d:20:27:3b:2f:64:69:73:70:6c:61:79:3a:69:6e:6c:69:6e:65:27:3b:20:2f:2f:46:4f:52:20:49:45:36:2c:37:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:74:68:69:73:2e:63:68:69:6c:4e:6f:64:65:73:57:20:2b:3d:20:63:68:69:6c:64:2e:6f:66:66:73:65:74:48:65:69:67:68:74:3b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:7d:20:65:6c:73:65:20:7b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:74:4e:6f:64:65:2e:70:75:73:68:28:63:68:69:6c:64:29:3b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:7d:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:7d:0d:0a:20:20:20:20:20:20:20:20:7d:0d:0a:20:20:20:20:20:20:20:20:66:6f:72:20:28:76:61:72:20:69:20:3d:20:30:2c:20:6d:20:3d:20:74:4e:6f:64:65:2e:6c:65:6e:67:74:68:3b:20:69:20:3c:20:6d:3b:20:69:2b:2b:29:20:7b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:74:4e:6f:64:65:5b:69:5d:2e:70:61:72:65:6e:74:4e:6f:64:65:2e:72:65:6d:6f:76:65:43:68:69:6c:64:28:74:4e:6f:64:65:5b:69:5d:29:3b:20:2f:2f:ed:83:9d:ec:8a:a4:ed:8a:b8:20:eb:85:b8:eb:93:9c:20:ec:a0:9c:ea:b1:b0:0d:0a:20:20:20:20:20:20:20:20:7d:0d:0a:20:20:20:20:20:20:20:20:74:4e:6f:64:65:20:3d:20:6e:75:6c:6c:3b:0d:0a:20:20:20:20:7d:0d:0a:20:20:20:20:2f:2f:2d:2d:2d:20:eb:b0:a9:ed:96:a5:20:eb:b3:80:ea:b2:bd:0d:0a:20:20:20:20:2c:0d:0a:20:20:20:20:27:63:68:61:6e:67:65:44:69:72:65:63:74:69:6f:6e:27:3a:20:66:75:6e:63:74:69:6f:6e:20:28:64:69:72:65:63:74:69:6f:6e:29:20:7b:0d:0a:20:20:20:20:20:20:20:20:74:68:69:73:2e:64:69:72:65:63:74:69:6f:6e:20:3d:20:64:69:72:65:63:74:69:6f:6e:0d:0a:20:20:20:20:20:20:20:20:74:68:69:73:2e:73:74:61:72:74:28:29:3b:0d:0a:20:20:20:20:7d:0d:0a:20:20:20:20:2f:2f:2d:2d:2d:20:ec:b2:98:ec:9d:8c:eb:85:b8:eb:93:9c:20:ea:b0:80:ec:a0:b8:ec:98:a4:ea:b8:b0:0d:0a:20:20:20:20:2c:0d:0a:20:20:20:20:27:67:65:74:46:69:72:73:74:27:3a:20:66:75:6e:63:74:69:6f:6e:20:28:29:20:7b:0d:0a:20:20:20:20:20:20:20:20:72:65:74:75:72:6e:20:74:68:69:73:2e:74:61:72:67:65:74:2e:66:69:72:73:74:43:68:69:6c:64:3b:0d:0a:20:20:20:20:7d:0d:0a:20:20:20:20:2f:2f:2d:2d:2d:20:eb:a7:88:ec:a7:80:eb:a7:89:eb:85:b8:eb:93:9c:20:ea:b0:80:ec:a0:b8:ec:98:a4:ea:b8:b0:0d:0a:20:20:20:20:2c:0d:0a:20:20:20:20:27:67:65:74:4c:61:73:74:27:3a:20:66:75:6e:63:74:69:6f:6e:20:28:29:20:7b:0d:0a:20:20:20:20:20:20:20:20:72:65:74:75:72:6e:20:74:68:69:73:2e:74:61:72:67:65:74:2e:6c:61:73:74:43:68:69:6c:64:3b:0d:0a:20:20:20:20:7d:0d:0a:20:20:20:20:2f:2f:2d:2d:2d:20:eb:8f:99:ec:9e:91:0d:0a:20:20:20:20:2c:0d:0a:20:20:20:20:27:5f:61:63:74:27:3a:20:66:75:6e:63:74:69:6f:6e:20:28:29:20:7b:0d:0a:20:20:20:20:20:20:20:20:69:66:20:28:74:68:69:73:2e:70:61:75:73:65:64:20:7c:7c:20:74:68:69:73:2e:6e:65:78:74:50:61:75:73:65:64:29:20:7b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:72:65:74:75:72:6e:3b:0d:0a:20:20:20:20:20:20:20:20:7d:0d:0a:20:20:20:20:20:20:20:20:73:77:69:74:63:68:20:28:74:68:69:73:2e:64:69:72:65:63:74:69:6f:6e:29:20:7b:0d:0a:20:20:20:20:20:20:20:20:63:61:73:65:20:31:3a:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:74:68:69:73:2e:5f:61:63:74:5f:75:70:28:29:3b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:62:72:65:61:6b:3b:0d:0a:20:20:20:20:20:20:20:20:63:61:73:65:20:32:3a:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:74:68:69:73:2e:5f:61:63:74:5f:72:69:67:68:74:28:29:3b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:62:72:65:61:6b:3b:0d:0a:20:20:20:20:20:20:20:20:63:61:73:65:20:33:3a:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:74:68:69:73:2e:5f:61:63:74:5f:64:6f:77:6e:28:29:3b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:62:72:65:61:6b:3b:0d:0a:20:20:20:20:20:20:20:20:63:61:73:65:20:34:3a:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:74:68:69:73:2e:5f:61:63:74:5f:6c:65:66:74:28:29:3b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:62:72:65:61:6b:3b:0d:0a:20:20:20:20:20:20:20:20:7d:0d:0a:20:20:20:20:7d:0d:0a:20:20:20:20:2f:2f:2d:2d:2d:20:eb:8f:99:ec:9e:91:20:ec:9c:84:20:28:31:29:0d:0a:20:20:20:20:2c:0d:0a:20:20:20:20:27:5f:61:63:74:5f:75:70:27:3a:20:66:75:6e:63:74:69:6f:6e:20:28:29:20:7b:0d:0a:20:20:20:20:20:20:20:20:2f:2f:2d:2d:2d:ec:b4:88:ea:b8:b0:ed:99:94:0d:0a:20:20:20:20:20:20:20:20:76:61:72:20:6e:20:3d:20:74:68:69:73:2e:67:65:74:46:69:72:73:74:28:29:3b:0d:0a:20:20:20:20:20:20:20:20:76:61:72:20:6d:74:20:3d:20:4d:61:74:68:2e:61:62:73:28:70:61:72:73:65:49:6e:74:28:6e:2e:73:74:79:6c:65:2e:6d:61:72:67:69:6e:54:6f:70:29:29:3b:0d:0a:20:20:20:20:20:20:20:20:76:61:72:20:6d:74:67:20:3d:20:6d:74:20:2b:20:74:68:69:73:2e:67:61:70:4d:6f:76:65:0d:0a:20:20:20:20:20:20:20:20:76:61:72:20:68:20:3d:20:6e:2e:6f:66:66:73:65:74:48:65:69:67:68:74:3b:0d:0a:20:20:20:20:20:20:20:20:69:66:20:28:6d:74:67:20:3e:3d:20:68:29:20:7b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:74:68:69:73:2e:74:61:72:67:65:74:2e:61:70:70:65:6e:64:43:68:69:6c:64:28:6e:29:3b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:74:68:69:73:2e:69:6e:69:74:43:68:69:6c:64:28:6e:29:3b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:74:68:69:73:2e:6e:65:78:74:50:61:75:73:65:28:29:3b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:74:68:69:73:2e:5f:61:63:74:28:29:3b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:72:65:74:75:72:6e:3b:0d:0a:20:20:20:20:20:20:20:20:7d:20:65:6c:73:65:20:7b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:6e:2e:73:74:79:6c:65:2e:6d:61:72:67:69:6e:54:6f:70:20:3d:20:27:2d:27:20:2b:20:6d:74:67:2e:74:6f:53:74:72:69:6e:67:28:29:20:2b:20:27:70:78:27:3b:0d:0a:20:20:20:20:20:20:20:20:7d:0d:0a:20:20:20:20:20:20:20:20:2f:2f:64:6f:63:75:6d:65:6e:74:2e:74:69:74:6c:65:20:3d:20:6e:2e:73:74:79:6c:65:2e:6d:61:72:67:69:6e:54:6f:70:3b:0d:0a:20:20:20:20:7d:0d:0a:20:20:20:20:2f:2f:2d:2d:2d:20:eb:8f:99:ec:9e:91:20:ec:98:a4:eb:a5:b8:ec:aa:bd:20:28:32:29:0d:0a:20:20:20:20:2c:0d:0a:20:20:20:20:27:5f:61:63:74:5f:72:69:67:68:74:27:3a:20:66:75:6e:63:74:69:6f:6e:20:28:29:20:7b:0d:0a:20:20:20:20:20:20:20:20:2f:2f:2d:2d:2d:ec:b4:88:ea:b8:b0:ed:99:94:0d:0a:20:20:20:20:20:20:20:20:76:61:72:20:6e:20:3d:20:74:68:69:73:2e:67:65:74:46:69:72:73:74:28:29:3b:0d:0a:20:20:20:20:20:20:20:20:76:61:72:20:6d:6c:20:3d:20:4d:61:74:68:2e:61:62:73:28:70:61:72:73:65:49:6e:74:28:6e:2e:73:74:79:6c:65:2e:6d:61:72:67:69:6e:4c:65:66:74:29:29:3b:0d:0a:20:20:20:20:20:20:20:20:76:61:72:20:6d:6c:67:20:3d:20:6d:6c:20:2d:20:74:68:69:73:2e:67:61:70:4d:6f:76:65:0d:0a:20:20:20:20:20:20:20:20:69:66:20:28:6d:6c:67:20:3c:3d:20:30:29:20:7b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:76:61:72:20:6c:20:3d:20:74:68:69:73:2e:67:65:74:4c:61:73:74:28:29:3b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:76:61:72:20:77:20:3d:20:6c:2e:6f:66:66:73:65:74:57:69:64:74:68:3b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:6c:2e:73:74:79:6c:65:2e:6d:61:72:67:69:6e:4c:65:66:74:20:3d:20:27:2d:27:20:2b:20:77:20:2b:20:27:70:78:27:3b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:74:68:69:73:2e:74:61:72:67:65:74:2e:69:6e:73:65:72:74:42:65:66:6f:72:65:28:6c:2c:20:6e:29:3b:20:2f:2f:eb:a7:88:ec:a7:80:eb:a7:89:20:eb:85:b8:eb:93:9c:eb:a5:bc:20:eb:a7:a8:20:ec:b2:98:ec:9d:8c:ec:9c:bc:eb:a1:9c:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:74:68:69:73:2e:69:6e:69:74:43:68:69:6c:64:28:6e:29:3b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:74:68:69:73:2e:6e:65:78:74:50:61:75:73:65:28:29:3b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:74:68:69:73:2e:5f:61:63:74:28:29:3b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:72:65:74:75:72:6e:3b:0d:0a:20:20:20:20:20:20:20:20:7d:20:65:6c:73:65:20:7b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:6e:2e:73:74:79:6c:65:2e:6d:61:72:67:69:6e:4c:65:66:74:20:3d:20:27:2d:27:20:2b:20:6d:6c:67:2e:74:6f:53:74:72:69:6e:67:28:29:20:2b:20:27:70:78:27:3b:0d:0a:20:20:20:20:20:20:20:20:7d:0d:0a:20:20:20:20:20:20:20:20:2f:2f:64:6f:63:75:6d:65:6e:74:2e:74:69:74:6c:65:20:3d:20:6e:2e:73:74:79:6c:65:2e:6d:61:72:67:69:6e:4c:65:66:74:3b:0d:0a:20:20:20:20:7d:0d:0a:20:20:20:20:2f:2f:2d:2d:2d:20:eb:8f:99:ec:9e:91:20:ec:95:84:eb:9e:98:28:33:29:0d:0a:20:20:20:20:2c:0d:0a:20:20:20:20:27:5f:61:63:74:5f:64:6f:77:6e:27:3a:20:66:75:6e:63:74:69:6f:6e:20:28:29:20:7b:0d:0a:20:20:20:20:20:20:20:20:2f:2f:2d:2d:2d:ec:b4:88:ea:b8:b0:ed:99:94:0d:0a:20:20:20:20:20:20:20:20:76:61:72:20:6e:20:3d:20:74:68:69:73:2e:67:65:74:46:69:72:73:74:28:29:3b:0d:0a:20:20:20:20:20:20:20:20:76:61:72:20:6d:74:20:3d:20:4d:61:74:68:2e:61:62:73:28:70:61:72:73:65:49:6e:74:28:6e:2e:73:74:79:6c:65:2e:6d:61:72:67:69:6e:54:6f:70:29:29:3b:0d:0a:20:20:20:20:20:20:20:20:76:61:72:20:6d:74:67:20:3d:20:6d:74:20:2d:20:74:68:69:73:2e:67:61:70:4d:6f:76:65:3b:0d:0a:20:20:20:20:20:20:20:20:69:66:20:28:6d:74:67:20:3c:3d:20:30:29:20:7b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:76:61:72:20:6c:20:3d:20:74:68:69:73:2e:67:65:74:4c:61:73:74:28:29:3b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:76:61:72:20:68:20:3d:20:6c:2e:6f:66:66:73:65:74:48:65:69:67:68:74:3b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:6c:2e:73:74:79:6c:65:2e:6d:61:72:67:69:6e:54:6f:70:20:3d:20:27:2d:27:20:2b:20:68:20:2b:20:27:70:78:27:3b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:74:68:69:73:2e:74:61:72:67:65:74:2e:69:6e:73:65:72:74:42:65:66:6f:72:65:28:6c:2c:20:6e:29:3b:20:2f:2f:eb:a7:88:ec:a7:80:eb:a7:89:20:eb:85:b8:eb:93:9c:eb:a5:bc:20:eb:a7:a8:20:ec:b2:98:ec:9d:8c:ec:9c:bc:eb:a1:9c:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:74:68:69:73:2e:69:6e:69:74:43:68:69:6c:64:28:6e:29:3b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:74:68:69:73:2e:6e:65:78:74:50:61:75:73:65:28:29:3b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:74:68:69:73:2e:5f:61:63:74:28:29:3b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:72:65:74:75:72:6e:3b:0d:0a:20:20:20:20:20:20:20:20:7d:20:65:6c:73:65:20:7b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:6e:2e:73:74:79:6c:65:2e:6d:61:72:67:69:6e:54:6f:70:20:3d:20:27:2d:27:20:2b:20:6d:74:67:2e:74:6f:53:74:72:69:6e:67:28:29:20:2b:20:27:70:78:27:3b:0d:0a:20:20:20:20:20:20:20:20:7d:0d:0a:20:20:20:20:20:20:20:20:2f:2f:64:6f:63:75:6d:65:6e:74:2e:74:69:74:6c:65:20:3d:20:6e:2e:73:74:79:6c:65:2e:6d:61:72:67:69:6e:54:6f:70:3b:0d:0a:20:20:20:20:7d:0d:0a:20:20:20:20:2f:2f:2d:2d:2d:20:eb:8f:99:ec:9e:91:20:ec:99:bc:ec:aa:bd:20:28:34:29:0d:0a:20:20:20:20:2c:0d:0a:20:20:20:20:27:5f:61:63:74:5f:6c:65:66:74:27:3a:20:66:75:6e:63:74:69:6f:6e:20:28:29:20:7b:0d:0a:20:20:20:20:20:20:20:20:2f:2f:2d:2d:2d:ec:b4:88:ea:b8:b0:ed:99:94:0d:0a:20:20:20:20:20:20:20:20:76:61:72:20:6e:20:3d:20:74:68:69:73:2e:67:65:74:46:69:72:73:74:28:29:3b:0d:0a:20:20:20:20:20:20:20:20:76:61:72:20:6d:6c:20:3d:20:4d:61:74:68:2e:61:62:73:28:70:61:72:73:65:49:6e:74:28:6e:2e:73:74:79:6c:65:2e:6d:61:72:67:69:6e:4c:65:66:74:29:29:3b:0d:0a:20:20:20:20:20:20:20:20:76:61:72:20:6d:6c:67:20:3d:20:6d:6c:20:2b:20:74:68:69:73:2e:67:61:70:4d:6f:76:65:0d:0a:20:20:20:20:20:20:20:20:76:61:72:20:77:20:3d:20:6e:2e:6f:66:66:73:65:74:57:69:64:74:68:3b:0d:0a:20:20:20:20:20:20:20:20:69:66:20:28:6d:6c:67:20:3e:3d:20:77:29:20:7b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:74:68:69:73:2e:74:61:72:67:65:74:2e:61:70:70:65:6e:64:43:68:69:6c:64:28:6e:29:3b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:74:68:69:73:2e:69:6e:69:74:43:68:69:6c:64:28:6e:29:3b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:74:68:69:73:2e:6e:65:78:74:50:61:75:73:65:28:29:3b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:74:68:69:73:2e:5f:61:63:74:28:29:3b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:72:65:74:75:72:6e:3b:0d:0a:20:20:20:20:20:20:20:20:7d:20:65:6c:73:65:20:7b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:6e:2e:73:74:79:6c:65:2e:6d:61:72:67:69:6e:4c:65:66:74:20:3d:20:27:2d:27:20:2b:20:6d:6c:67:2e:74:6f:53:74:72:69:6e:67:28:29:20:2b:20:27:70:78:27:3b:0d:0a:20:20:20:20:20:20:20:20:7d:0d:0a:20:20:20:20:20:20:20:20:2f:2f:64:6f:63:75:6d:65:6e:74:2e:74:69:74:6c:65:20:3d:20:6e:2e:73:74:79:6c:65:2e:6d:61:72:67:69:6e:4c:65:66:74:3b:0d:0a:20:20:20:20:7d:0d:0a:20:20:20:20:2f:2f:2d:2d:2d:20:eb:a1:a4:eb:a7:81:ec:8b:9c:ec:9e:91:0d:0a:20:20:20:20:2c:0d:0a:20:20:20:20:27:73:74:61:72:74:27:3a:20:66:75:6e:63:74:69:6f:6e:20:28:29:20:7b:0d:0a:20:20:20:20:20:20:20:20:69:66:20:28:21:74:68:69:73:2e:73:74:61:72:74:65:64:20:26:26:20:74:68:69:73:2e:73:74:61:72:74:41:62:6c:65:28:29:29:20:7b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:74:68:69:73:2e:6e:65:78:74:50:61:75:73:65:28:29:3b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:74:68:69:73:2e:74:69:6d:65:72:20:3d:20:73:65:74:49:6e:74:65:72:76:61:6c:28:66:75:6e:63:74:69:6f:6e:20:28:74:68:69:73:43:29:20:7b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:72:65:74:75:72:6e:20:66:75:6e:63:74:69:6f:6e:20:28:29:20:7b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:74:68:69:73:43:2e:5f:61:63:74:28:29:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:7d:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:7d:28:74:68:69:73:29:2c:20:74:68:69:73:2e:67:61:70:54:69:6d:65:29:3b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:74:68:69:73:2e:73:74:61:72:74:65:64:20:3d:20:74:72:75:65:3b:0d:0a:20:20:20:20:20:20:20:20:7d:0d:0a:20:20:20:20:7d:0d:0a:20:20:20:20:2f:2f:2d:2d:2d:20:eb:a1:a4:eb:a7:81:20:eb:a9:88:ec:b6:a4:0d:0a:20:20:20:20:2c:0d:0a:20:20:20:20:27:73:74:6f:70:27:3a:20:66:75:6e:63:74:69:6f:6e:20:28:29:20:7b:0d:0a:20:20:20:20:20:20:20:20:63:6c:65:61:72:49:6e:74:65:72:76:61:6c:28:74:68:69:73:2e:74:69:6d:65:72:29:3b:0d:0a:20:20:20:20:20:20:20:20:74:68:69:73:2e:73:74:61:72:74:65:64:20:3d:20:66:61:6c:73:65:3b:0d:0a:20:20:20:20:7d:0d:0a:20:20:20:20:2f:2f:2d:2d:2d:20:eb:a1:a4:eb:a7:81:ec:9d:84:20:ec:8b:9c:ec:9e:91:ed:95:a0:20:ec:88:98:20:ec:9e:88:eb:8a:94:ea:b0:80:3f:20:ec:99:b8:ea:b0:81:ec:9d:98:20:31:2e:35:eb:b0:b0:eb:a7:8c:ed:81:bc:ec:9d:98:20:ec:9e:90:ec:8b:9d:20:eb:85:b8:eb:93:9c:ea:b0:80:20:ec:9e:88:ec:96:b4:ec:95:bc:ed:95:9c:eb:8b:a4:2e:0d:0a:20:20:20:20:2c:0d:0a:20:20:20:20:27:73:74:61:72:74:41:62:6c:65:27:3a:20:66:75:6e:63:74:69:6f:6e:20:28:29:20:7b:0d:0a:20:20:20:20:20:20:20:20:69:66:20:28:21:74:68:69:73:2e:63:68:65:63:6b:53:74:61:72:74:29:20:7b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:72:65:74:75:72:6e:20:74:72:75:65:3b:0d:0a:20:20:20:20:20:20:20:20:7d:0d:0a:20:20:20:20:20:20:20:20:69:66:20:28:74:68:69:73:2e:63:68:69:6c:4e:6f:64:65:73:57:20:3e:20:28:74:68:69:73:2e:74:61:72:67:65:74:57:20:2a:20:31:2e:35:29:29:20:7b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:72:65:74:75:72:6e:20:74:72:75:65:3b:0d:0a:20:20:20:20:20:20:20:20:7d:0d:0a:20:20:20:20:20:20:20:20:72:65:74:75:72:6e:20:66:61:6c:73:65:3b:0d:0a:20:20:20:20:7d:0d:0a:20:20:20:20:2f:2f:2d:2d:2d:20:70:61:75:73:65:28:62:6f:6f:6c:ec:9d:b4:20:74:72:75:65:eb:a9:b4:20:eb:a9:88:ec:b6:98:eb:8b:a4:2e:20:66:61:6c:73:65:eb:a9:b4:20:eb:a9:88:ec:b6:a4:ec:9d:b4:20:ed:95:b4:ec:a0:9c:29:0d:0a:20:20:20:20:2f:2f:73:74:6f:70:ea:b3:bc:20:ec:b0:a8:ec:9d:b4:ec:a0:90:ec:9d:80:20:63:6c:65:61:72:49:6e:74:65:72:76:61:6c:ec:9d:84:20:ed:95:98:ec:a7:80:20:ec:95:8a:eb:8a:94:eb:8b:a4:eb:8a:94:20:ea:b2:83:21:0d:0a:20:20:20:20:2c:0d:0a:20:20:20:20:27:70:61:75:73:65:27:3a:20:66:75:6e:63:74:69:6f:6e:20:28:62:6f:6f:6c:29:20:7b:0d:0a:20:20:20:20:20:20:20:20:74:68:69:73:2e:70:61:75:73:65:64:20:3d:20:62:6f:6f:6c:20:3f:20:74:72:75:65:20:3a:20:66:61:6c:73:65:3b:0d:0a:20:20:20:20:7d:0d:0a:20:20:20:20:2f:2f:2d:2d:2d:20:eb:8b:a4:ec:9d:8c:20:ea:b0:9d:ec:b2:b4:ea:b0:80:20:eb:b3:b4:ec:9d:bc:eb:95:8c:20:ec:9e:a0:ec:8b:9c:20:eb:a9:88:ec:b6:98:eb:8b:a4:2e:0d:0a:20:20:20:20:2c:0d:0a:20:20:20:20:27:6e:65:78:74:50:61:75:73:65:27:3a:20:66:75:6e:63:74:69:6f:6e:20:28:29:20:7b:0d:0a:20:20:20:20:20:20:20:20:69:66:20:28:74:68:69:73:2e:6e:65:78:74:50:61:75:73:65:64:29:20:7b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:63:6c:65:61:72:54:69:6d:65:6f:75:74:28:74:68:69:73:2e:74:69:6d:65:72:4e:65:78:74:50:61:75:73:65:29:3b:0d:0a:20:20:20:20:20:20:20:20:7d:0d:0a:20:20:20:20:20:20:20:20:74:68:69:73:2e:6e:65:78:74:50:61:75:73:65:64:20:3d:20:74:72:75:65:3b:0d:0a:20:20:20:20:20:20:20:20:74:68:69:73:2e:74:69:6d:65:72:4e:65:78:74:50:61:75:73:65:20:3d:20:73:65:74:54:69:6d:65:6f:75:74:28:66:75:6e:63:74:69:6f:6e:20:28:74:68:69:73:43:29:20:7b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:72:65:74:75:72:6e:20:66:75:6e:63:74:69:6f:6e:20:28:29:20:7b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:74:68:69:73:43:2e:6e:65:78:74:50:61:75:73:65:64:20:3d:20:66:61:6c:73:65:3b:0d:0a:20:20:20:20:20:20:20:20:20:20:20:20:7d:0d:0a:20:20:20:20:20:20:20:20:7d:28:74:68:69:73:29:2c:20:74:68:69:73:2e:67:61:70:4e:65:78:74:50:61:75:73:65:29:3b:0d:0a:20:20:20:20:7d:0d:0a:20:20:20:20:2f:2f:2d:2d:2d:20:eb:a7:88:ec:9a:b0:ec:8a:a4:20:ec:98:a4:eb:b2:84:20:ec:9d:b4:eb:b2:a4:ed:8a:b8:2c:20:eb:b3:b4:ed:86:b5:20:ec:9e:a0:ec:8b:9c:20:eb:a9:88:ec:b6:98:eb:8b:a4:2e:0d:0a:20:20:20:20:2c:0d:0a:20:20:20:20:27:6f:6e:6d:6f:75:73:65:6f:76:65:72:27:3a:20:66:75:6e:63:74:69:6f:6e:20:28:29:20:7b:0d:0a:20:20:20:20:20:20:20:20:74:68:69:73:2e:70:61:75:73:65:28:74:72:75:65:29:3b:0d:0a:20:20:20:20:7d:0d:0a:09:0d:0a:20:20:20:20:2f:2f:2d:2d:2d:20:eb:a7:88:ec:9a:b0:ec:8a:a4:20:ec:95:84:ec:9b:83:20:ec:9d:b4:eb:b2:a4:ed:8a:b8:2c:20:eb:b3:b4:ed:86:b5:20:ec:9e:a0:ec:8b:9c:20:eb:a9:88:ec:b6:98:ec:9d:84:20:ed:95:b4:ec:a0:9c:ed:95:9c:eb:8b:a4:2e:0d:0a:20:20:20:20:2c:0d:0a:20:20:20:20:27:6f:6e:6d:6f:75:73:65:6f:75:74:27:3a:20:66:75:6e:63:74:69:6f:6e:20:28:29:20:7b:0d:0a:20:20:20:20:20:20:20:20:74:68:69:73:2e:70:61:75:73:65:28:66:61:6c:73:65:29:3b:0d:0a:20:20:20:20:7d:0d:0a:20:20:20:20:2f:2f:2d:2d:2d:20:ec:9c:84:eb:a1:9c:20:eb:84:98:ea:b9:80:0d:0a:20:20:20:20:2c:0d:0a:20:20:20:20:27:75:70:27:3a:20:66:75:6e:63:74:69:6f:6e:20:28:29:20:7b:0d:0a:20:20:20:20:20:20:20:20:76:61:72:20:6e:20:3d:20:74:68:69:73:2e:67:65:74:46:69:72:73:74:28:29:3b:0d:0a:20:20:20:20:20:20:20:20:76:61:72:20:6c:20:3d:20:74:68:69:73:2e:67:65:74:4c:61:73:74:28:29:3b:0d:0a:20:20:20:20:20:20:20:20:74:68:69:73:2e:74:61:72:67:65:74:2e:61:70:70:65:6e:64:43:68:69:6c:64:28:6e:29:3b:0d:0a:20:20:20:20:20:20:20:20:74:68:69:73:2e:69:6e:69:74:43:68:69:6c:64:28:6e:29:3b:0d:0a:20:20:20:20:20:20:20:20:74:68:69:73:2e:6e:65:78:74:50:61:75:73:65:28:29:3b:0d:0a:20:20:20:20:7d:0d:0a:20:20:20:20:2f:2f:2d:2d:2d:20:ec:95:84:eb:9e:98:eb:a1:9c:20:eb:84:98:ea:b9:80:0d:0a:20:20:20:20:2c:0d:0a:20:20:20:20:27:64:6f:77:6e:27:3a:20:66:75:6e:63:74:69:6f:6e:20:28:29:20:7b:0d:0a:20:20:20:20:20:20:20:20:76:61:72:20:6e:20:3d:20:74:68:69:73:2e:67:65:74:46:69:72:73:74:28:29:3b:0d:0a:20:20:20:20:20:20:20:20:76:61:72:20:6c:20:3d:20:74:68:69:73:2e:67:65:74:4c:61:73:74:28:29:3b:0d:0a:20:20:20:20:20:20:20:20:74:68:69:73:2e:74:61:72:67:65:74:2e:69:6e:73:65:72:74:42:65:66:6f:72:65:28:6c:2c:20:6e:29:3b:20:2f:2f:eb:a7:88:ec:a7:80:eb:a7:89:20:eb:85:b8:eb:93:9c:eb:a5:bc:20:eb:a7:a8:20:ec:b2:98:ec:9d:8c:ec:9c:bc:eb:a1:9c:0d:0a:20:20:20:20:20:20:20:20:74:68:69:73:2e:69:6e:69:74:43:68:69:6c:64:28:6c:29:3b:0d:0a:20:20:20:20:20:20:20:20:74:68:69:73:2e:69:6e:69:74:43:68:69:6c:64:28:6e:29:3b:0d:0a:20:20:20:20:20:20:20:20:74:68:69:73:2e:6e:65:78:74:50:61:75:73:65:28:29:3b:0d:0a:20:20:20:20:7d:0d:0a:20:20:20:20:2f:2f:2d:2d:2d:20:ec:99:bc:ec:aa:bd:ec:9c:bc:eb:a1:9c:20:eb:84:98:ea:b9:80:2c:20:75:70:ea:b3:bc:20:eb:8f:99:ec:9e:91:ec:9d:b4:20:ea:b0:99:eb:8b:a4:2e:0d:0a:20:20:20:20:2c:0d:0a:20:20:20:20:27:6c:65:66:74:27:3a:20:66:75:6e:63:74:69:6f:6e:20:28:29:20:7b:0d:0a:20:20:20:20:20:20:20:20:74:68:69:73:2e:75:70:28:29:3b:0d:0a:20:20:20:20:7d:0d:0a:20:20:20:20:2f:2f:2d:2d:2d:20:ec:98:a4:eb:a5:b8:ec:aa:bd:ec:9c:bc:eb:a1:9c:20:eb:84:98:ea:b9:80:20:2c:20:64:6f:77:6e:ea:b3:bc:20:eb:8f:99:ec:9e:91:ec:9d:b4:20:ea:b0:99:eb:8b:a4:2e:0d:0a:20:20:20:20:2c:0d:0a:20:20:20:20:27:72:69:67:68:74:27:3a:20:66:75:6e:63:74:69:6f:6e:20:28:29:20:7b:0d:0a:20:20:20:20:20:20:20:20:74:68:69:73:2e:64:6f:77:6e:28:29:3b:0d:0a:20:20:20:20:7d:0d:0a:7d'}, 'http': {'HTTP/1.1 200 OK\\r\\n': {'_ws.expert': {'http.chat': '', '_ws.expert.message': 'HTTP/1.1 200 OK\\r\\n', '_ws.expert.severity': '2097152', '_ws.expert.group': '33554432'}, 'http.response.version': 'HTTP/1.1', 'http.response.code': '200', 'http.response.code.desc': 'OK', 'http.response.phrase': 'OK'}, 'http.date': 'Sun, 15 Aug 2021 13:06:32 GMT', 'http.response.line': 'Content-Length: 9141\r\n', 'http.content_type': 'text/javascript', 'http.connection': 'Keep-Alive', 'http.last_modified': 'Mon, 05 Apr 2021 08:59:51 GMT', 'http.content_length_header': '9141', 'http.content_length_header_tree': {'http.content_length': '9141'}, '\\r\\n': '', 'http.response': '1', 'http.response_number': '2', 'http.time': '0.021979000', 'http.prev_request_in': '15898', 'http.prev_response_in': '16212', 'http.request_in': '16215', 'http.response_for.uri': 'http://www.pasa.go.kr/resources/js/jsRolling.js', 'http.file_data': 'var jsRolling = function (target) {\r\n        this.timer = null; //interval ���������\r\n        this.timerNextPause = null;\r\n        this.direction = 2; //������\r\n        this.gapTime = 30; //���������������\r\n        this.gapMove = 1; //������������\r\n        this.gapNextPause = 5; //������ ������ ��������� ������ ���������, 0������ ������������.\r\n        this.target = null;\r\n        this.targetW = 0;\r\n        this.chilNodesW = 0;\r\n        this.started = false; //������ ���������������?\r\n        this.paused = false; //������ ������ ������ ���������?\r\n        this.nextPaused = false; //������ ��������� ��������� ������ ������ ���������?\r\n        this.checkStart = true; //start ������ ������������������ ��������� ������������ start������������ ������, ��������� ��������� ������!\r\n        if (target) {\r\n            this.init(target);\r\n        }\r\n    }\r\njsRolling.prototype = {\r\n    //���������, ��������� ������������ ��������� child��� ������������������.\r\n    \'init\': function (target) {\r\n        this.target = target;\r\n    }\r\n    //--- ������ ������ ���������\r\n    ,\r\n    \'initChild\': function (child) {\r\n        child.style.margin = \'0\';\r\n    }\r\n    //--- ��������� ������ ������ ���������\r\n    ,\r\n    \'setDirection\': function (direction) {\r\n    \t\r\n        this.changeDirection(direction);\r\n        var tNode = [];\r\n        //--- ������ ���������\r\n        this.target.style.overflow = \'hidden\';\r\n        this.target.style.position = \'relative\';\r\n        this.target.onmouseover = function (thisC) {\r\n            return function () {\r\n                thisC.onmouseover()\r\n            }\r\n        }(this);\r\n        this.target.onmouseout = function (thisC) {\r\n            return function () {\r\n                thisC.onmouseout()\r\n            }\r\n        }(this);\r\n\t\t\r\n        if (this.direction == 1 || this.direction == 3) {\r\n            this.target.style.whiteSpace = \'normal\';\r\n            this.targetW = this.target.offsetWidth;\r\n            for (var child = this.target.firstChild; child; child = child.nextSibling) {\r\n                if (child.nodeType == 1) {\r\n                    child.style.margin = "0";\r\n                    child.style.display = \'block\';\r\n                    this.chilNodesW += child.offsetWidth;\r\n                } else {\r\n                    tNode.push(child);\r\n                }\r\n            }\r\n        } else if (this.direction == 2 || this.direction == 4) {\r\n            this.target.style.whiteSpace = \'nowrap\';\r\n            this.targetW = this.target.offsetHeight;\r\n            for (var child = this.target.firstChild; child; child = child.nextSibling) {\r\n                if (child.nodeType == 1) {\r\n                    child.style.margin = "0";\r\n                   // child.style.float = \'inline-block\';\r\n                   // child.style.cssText += \';/display:inline\'; //FOR IE6,7\r\n                    this.chilNodesW += child.offsetHeight;\r\n                } else {\r\n                    tNode.push(child);\r\n                }\r\n            }\r\n        }\r\n        for (var i = 0, m = tNode.length; i < m; i++) {\r\n            tNode[i].parentNode.removeChild(tNode[i]); //��������� ������ ������\r\n        }\r\n        tNode = null;\r\n    }\r\n    //--- ������ ������\r\n    ,\r\n    \'changeDirection\': function (direction) {\r\n        this.direction = direction\r\n        this.start();\r\n    }\r\n    //--- ������������ ������������\r\n    ,\r\n    \'getFirst\': function () {\r\n        return this.target.firstChild;\r\n    }\r\n    //--- ��������������� ������������\r\n    ,\r\n    \'getLast\': function () {\r\n        return this.target.lastChild;\r\n    }\r\n    //--- ������\r\n    ,\r\n    \'_act\': function () {\r\n        if (this.paused || this.nextPaused) {\r\n            return;\r\n        }\r\n        switch (this.direction) {\r\n        case 1:\r\n            this._act_up();\r\n            break;\r\n        case 2:\r\n            this._act_right();\r\n            break;\r\n        case 3:\r\n            this._act_down();\r\n            break;\r\n        case 4:\r\n            this._act_left();\r\n            break;\r\n        }\r\n    }\r\n    //--- ������ ��� (1)\r\n    ,\r\n    \'_act_up\': function () {\r\n        //---���������\r\n        var n = this.getFirst();\r\n        var mt = Math.abs(parseInt(n.style.marginTop));\r\n        var mtg = mt + this.gapMove\r\n        var h = n.offsetHeight;\r\n        if (mtg >= h) {\r\n            this.target.appendChild(n);\r\n            this.initChild(n);\r\n            this.nextPause();\r\n            this._act();\r\n            return;\r\n        } else {\r\n            n.style.marginTop = \'-\' + mtg.toString() + \'px\';\r\n        }\r\n        //document.title = n.style.marginTop;\r\n    }\r\n    //--- ������ ��������� (2)\r\n    ,\r\n    \'_act_right\': function () {\r\n        //---���������\r\n        var n = this.getFirst();\r\n        var ml = Math.abs(parseInt(n.style.marginLeft));\r\n        var mlg = ml - this.gapMove\r\n        if (mlg <= 0) {\r\n            var l = this.getLast();\r\n            var w = l.offsetWidth;\r\n            l.style.marginLeft = \'-\' + w + \'px\';\r\n            this.target.insertBefore(l, n); //��������� ��������� ��� ������������\r\n            this.initChild(n);\r\n            this.nextPause();\r\n            this._act();\r\n            return;\r\n        } else {\r\n            n.style.marginLeft = \'-\' + mlg.toString() + \'px\';\r\n        }\r\n        //document.title = n.style.marginLeft;\r\n    }\r\n    //--- ������ ������(3)\r\n    ,\r\n    \'_act_down\': function () {\r\n        //---���������\r\n        var n = this.getFirst();\r\n        var mt = Math.abs(parseInt(n.style.marginTop));\r\n        var mtg = mt - this.gapMove;\r\n        if (mtg <= 0) {\r\n            var l = this.getLast();\r\n            var h = l.offsetHeight;\r\n            l.style.marginTop = \'-\' + h + \'px\';\r\n            this.target.insertBefore(l, n); //��������� ��������� ��� ������������\r\n            this.initChild(n);\r\n            this.nextPause();\r\n            this._act();\r\n            return;\r\n        } else {\r\n            n.style.marginTop = \'-\' + mtg.toString() + \'px\';\r\n        }\r\n        //document.title = n.style.marginTop;\r\n    }\r\n    //--- ������ ������ (4)\r\n    ,\r\n    \'_act_left\': function () {\r\n        //---���������\r\n        var n = this.getFirst();\r\n        var ml = Math.abs(parseInt(n.style.marginLeft));\r\n        var mlg = ml + this.gapMove\r\n        var w = n.offsetWidth;\r\n        if (mlg >= w) {\r\n            this.target.appendChild(n);\r\n            this.initChild(n);\r\n            this.nextPause();\r\n            this._act();\r\n            return;\r\n        } else {\r\n            n.style.marginLeft = \'-\' + mlg.toString() + \'px\';\r\n        }\r\n        //document.title = n.style.marginLeft;\r\n    }\r\n    //--- ������������\r\n    ,\r\n    \'start\': function () {\r\n        if (!this.started && this.startAble()) {\r\n            this.nextPause();\r\n            this.timer = setInterval(function (thisC) {\r\n                return function () {\r\n                    thisC._act()\r\n                }\r\n            }(this), this.gapTime);\r\n            this.started = true;\r\n        }\r\n    }\r\n    //--- ������ ������\r\n    ,\r\n    \'stop\': function () {\r\n        clearInterval(this.timer);\r\n        this.started = false;\r\n    }\r\n    //--- ��������� ��������� ��� ���������? ��������� 1.5������������ ������ ��������� ���������������.\r\n    ,\r\n    \'startAble\': function () {\r\n        if (!this.checkStart) {\r\n            return true;\r\n        }\r\n        if (this.chilNodesW > (this.targetW * 1.5)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    //--- pause(bool��� true��� ���������. false��� ��������� ������)\r\n    //stop��� ������������ clearInterval��� ������ ������������ ���!\r\n    ,\r\n    \'pause\': function (bool) {\r\n        this.paused = bool ? true : false;\r\n    }\r\n    //--- ������ ��������� ��������� ������ ���������.\r\n    ,\r\n    \'nextPause\': function () {\r\n        if (this.nextPaused) {\r\n            clearTimeout(this.timerNextPause);\r\n        }\r\n        this.nextPaused = true;\r\n        this.timerNextPause = setTimeout(function (thisC) {\r\n            return function () {\r\n                thisC.nextPaused = false;\r\n            }\r\n        }(this), this.gapNextPause);\r\n    }\r\n    //--- ��������� ������ ���������, ������ ������ ���������.\r\n    ,\r\n    \'onmouseover\': function () {\r\n        this.pause(true);\r\n    }\r\n\t\r\n    //--- ��������� ������ ���������, ������ ������ ��������� ������������.\r\n    ,\r\n    \'onmouseout\': function () {\r\n        this.pause(false);\r\n    }\r\n    //--- ������ ������\r\n    ,\r\n    \'up\': function () {\r\n        var n = this.getFirst();\r\n        var l = this.getLast();\r\n        this.target.appendChild(n);\r\n        this.initChild(n);\r\n        this.nextPause();\r\n    }\r\n    //--- ��������� ������\r\n    ,\r\n    \'down\': function () {\r\n        var n = this.getFirst();\r\n        var l = this.getLast();\r\n        this.target.insertBefore(l, n); //��������� ��������� ��� ������������\r\n        this.initChild(l);\r\n        this.initChild(n);\r\n        this.nextPause();\r\n    }\r\n    //--- ������������ ������, up��� ��������� ������.\r\n    ,\r\n    \'left\': function () {\r\n        this.up();\r\n    }\r\n    //--- ��������������� ������ , down��� ��������� ������.\r\n    ,\r\n    \'right\': function () {\r\n        this.down();\r\n    }\r\n}'}, 'data-text-lines': {'var jsRolling = function (target) {\\r\\n': '', '        this.timer = null; //interval 타이머\\r\\n': '', '        this.timerNextPause = null;\\r\\n': '', '        this.direction = 2; //방향\\r\\n': '', '        this.gapTime = 30; //이동딜레이\\r\\n': '', '        this.gapMove = 1; //이동간격\\r\\n': '', '        this.gapNextPause = 5; //다음 대상 동작에 대한 딜레이, 0이면 사용안함.\\r\\n': '', '        this.target = null;\\r\\n': '', '        this.targetW = 0;\\r\\n': '', '        this.chilNodesW = 0;\\r\\n': '', '        this.started = false; //현재 동작중인가?\\r\\n': '', '        this.paused = false; //현재 잠시 멈춤 중인가?\\r\\n': '', '        this.nextPaused = false; //다음 개체가 보일때 잠시 멈춤 중인가?\\r\\n': '', '        this.checkStart = true; //start 할때 자식노드들의 너비를 체크해서 start가능한지 체크, 없으면 무조건 동작!\\r\\n': '', '        if (target) {\\r\\n': '', '            this.init(target);\\r\\n': '', '        }\\r\\n': '', '    }\\r\\n': '', 'jsRolling.prototype = {\\r\\n': '', '    //초기화, 타겟을 지정하고 타겟의 child를 초기화시킨다.\\r\\n': '', "    'init': function (target) {\\r\\n": '', '        this.target = target;\\r\\n': '', '    //--- 타겟 설정 초기화\\r\\n': '', '    ,\\r\\n': '', "    'initChild': function (child) {\\r\\n": '', "        child.style.margin = '0';\\r\\n": '', '    //--- 방향과 자식 설정 초기화\\r\\n': '', "    'setDirection': function (direction) {\\r\\n": '', '    \\t\\r\\n': '', '        this.changeDirection(direction);\\r\\n': '', '        var tNode = [];\\r\\n': '', '        //--- 타겟 초기화\\r\\n': '', "        this.target.style.overflow = 'hidden';\\r\\n": '', "        this.target.style.position = 'relative';\\r\\n": '', '        this.target.onmouseover = function (thisC) {\\r\\n': '', '            return function () {\\r\\n': '', '                thisC.onmouseover()\\r\\n': '', '            }\\r\\n': '', '        }(this);\\r\\n': '', '        this.target.onmouseout = function (thisC) {\\r\\n': '', '                thisC.onmouseout()\\r\\n': '', '\\t\\t\\r\\n': '', '        if (this.direction == 1 || this.direction == 3) {\\r\\n': '', "            this.target.style.whiteSpace = 'normal';\\r\\n": '', '            this.targetW = this.target.offsetWidth;\\r\\n': '', '            for (var child = this.target.firstChild; child; child = child.nextSibling) {\\r\\n': '', '                if (child.nodeType == 1) {\\r\\n': '', '                    child.style.margin = "0";\\r\\n': '', "                    child.style.display = 'block';\\r\\n": '', '                    this.chilNodesW += child.offsetWidth;\\r\\n': '', '                } else {\\r\\n': '', '                    tNode.push(child);\\r\\n': '', '                }\\r\\n': '', '        } else if (this.direction == 2 || this.direction == 4) {\\r\\n': '', "            this.target.style.whiteSpace = 'nowrap';\\r\\n": '', '            this.targetW = this.target.offsetHeight;\\r\\n': '', "                   // child.style.float = 'inline-block';\\r\\n": '', "                   // child.style.cssText += ';/display:inline'; //FOR IE6,7\\r\\n": '', '                    this.chilNodesW += child.offsetHeight;\\r\\n': '', '        for (var i = 0, m = tNode.length; i < m; i++) {\\r\\n': '', '            tNode[i].parentNode.removeChild(tNode[i]); //택스트 노드 제거\\r\\n': '', '        tNode = null;\\r\\n': '', '    //--- 방향 변경\\r\\n': '', "    'changeDirection': function (direction) {\\r\\n": '', '        this.direction = direction\\r\\n': '', '        this.start();\\r\\n': '', '    //--- 처음노드 가져오기\\r\\n': '', "    'getFirst': function () {\\r\\n": '', '        return this.target.firstChild;\\r\\n': '', '    //--- 마지막노드 가져오기\\r\\n': '', "    'getLast': function () {\\r\\n": '', '        return this.target.lastChild;\\r\\n': '', '    //--- 동작\\r\\n': '', "    '_act': function () {\\r\\n": '', '        if (this.paused || this.nextPaused) {\\r\\n': '', '            return;\\r\\n': '', '        switch (this.direction) {\\r\\n': '', '        case 1:\\r\\n': '', '            this._act_up();\\r\\n': '', '            break;\\r\\n': '', '        case 2:\\r\\n': '', '            this._act_right();\\r\\n': '', '        case 3:\\r\\n': '', '            this._act_down();\\r\\n': '', '        case 4:\\r\\n': '', '            this._act_left();\\r\\n': '', '    //--- 동작 위 (1)\\r\\n': '', "    '_act_up': function () {\\r\\n": '', '        //---초기화\\r\\n': '', '        var n = this.getFirst();\\r\\n': '', '        var mt = Math.abs(parseInt(n.style.marginTop));\\r\\n': '', '        var mtg = mt + this.gapMove\\r\\n': '', '        var h = n.offsetHeight;\\r\\n': '', '        if (mtg >= h) {\\r\\n': '', '            this.target.appendChild(n);\\r\\n': '', '            this.initChild(n);\\r\\n': '', '            this.nextPause();\\r\\n': '', '            this._act();\\r\\n': '', '        } else {\\r\\n': '', "            n.style.marginTop = '-' + mtg.toString() + 'px';\\r\\n": '', '        //document.title = n.style.marginTop;\\r\\n': '', '    //--- 동작 오른쪽 (2)\\r\\n': '', "    '_act_right': function () {\\r\\n": '', '        var ml = Math.abs(parseInt(n.style.marginLeft));\\r\\n': '', '        var mlg = ml - this.gapMove\\r\\n': '', '        if (mlg <= 0) {\\r\\n': '', '            var l = this.getLast();\\r\\n': '', '            var w = l.offsetWidth;\\r\\n': '', "            l.style.marginLeft = '-' + w + 'px';\\r\\n": '', '            this.target.insertBefore(l, n); //마지막 노드를 맨 처음으로\\r\\n': '', "            n.style.marginLeft = '-' + mlg.toString() + 'px';\\r\\n": '', '        //document.title = n.style.marginLeft;\\r\\n': '', '    //--- 동작 아래(3)\\r\\n': '', "    '_act_down': function () {\\r\\n": '', '        var mtg = mt - this.gapMove;\\r\\n': '', '        if (mtg <= 0) {\\r\\n': '', '            var h = l.offsetHeight;\\r\\n': '', "            l.style.marginTop = '-' + h + 'px';\\r\\n": '', '    //--- 동작 왼쪽 (4)\\r\\n': '', "    '_act_left': function () {\\r\\n": '', '        var mlg = ml + this.gapMove\\r\\n': '', '        var w = n.offsetWidth;\\r\\n': '', '        if (mlg >= w) {\\r\\n': '', '    //--- 롤링시작\\r\\n': '', "    'start': function () {\\r\\n": '', '        if (!this.started && this.startAble()) {\\r\\n': '', '            this.timer = setInterval(function (thisC) {\\r\\n': '', '                return function () {\\r\\n': '', '                    thisC._act()\\r\\n': '', '            }(this), this.gapTime);\\r\\n': '', '            this.started = true;\\r\\n': '', '    //--- 롤링 멈춤\\r\\n': '', "    'stop': function () {\\r\\n": '', '        clearInterval(this.timer);\\r\\n': '', '        this.started = false;\\r\\n': '', '    //--- 롤링을 시작할 수 있는가? 외각의 1.5배만큼의 자식 노드가 있어야한다.\\r\\n': '', "    'startAble': function () {\\r\\n": '', '        if (!this.checkStart) {\\r\\n': '', '            return true;\\r\\n': '', '        if (this.chilNodesW > (this.targetW * 1.5)) {\\r\\n': '', '        return false;\\r\\n': '', '    //--- pause(bool이 true면 멈춘다. false면 멈춤이 해제)\\r\\n': '', '    //stop과 차이점은 clearInterval을 하지 않는다는 것!\\r\\n': '', "    'pause': function (bool) {\\r\\n": '', '        this.paused = bool ? true : false;\\r\\n': '', '    //--- 다음 객체가 보일때 잠시 멈춘다.\\r\\n': '', "    'nextPause': function () {\\r\\n": '', '        if (this.nextPaused) {\\r\\n': '', '            clearTimeout(this.timerNextPause);\\r\\n': '', '        this.nextPaused = true;\\r\\n': '', '        this.timerNextPause = setTimeout(function (thisC) {\\r\\n': '', '                thisC.nextPaused = false;\\r\\n': '', '        }(this), this.gapNextPause);\\r\\n': '', '    //--- 마우스 오버 이벤트, 보통 잠시 멈춘다.\\r\\n': '', "    'onmouseover': function () {\\r\\n": '', '        this.pause(true);\\r\\n': '', '\\t\\r\\n': '', '    //--- 마우스 아웃 이벤트, 보통 잠시 멈춘을 해제한다.\\r\\n': '', "    'onmouseout': function () {\\r\\n": '', '        this.pause(false);\\r\\n': '', '    //--- 위로 넘김\\r\\n': '', "    'up': function () {\\r\\n": '', '        var l = this.getLast();\\r\\n': '', '        this.target.appendChild(n);\\r\\n': '', '        this.initChild(n);\\r\\n': '', '        this.nextPause();\\r\\n': '', '    //--- 아래로 넘김\\r\\n': '', "    'down': function () {\\r\\n": '', '        this.target.insertBefore(l, n); //마지막 노드를 맨 처음으로\\r\\n': '', '        this.initChild(l);\\r\\n': '', '    //--- 왼쪽으로 넘김, up과 동작이 같다.\\r\\n': '', "    'left': function () {\\r\\n": '', '        this.up();\\r\\n': '', '    //--- 오른쪽으로 넘김 , down과 동작이 같다.\\r\\n': '', "    'right': function () {\\r\\n": '', '        this.down();\\r\\n': '', '}': ''}}}}